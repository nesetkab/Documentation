import{_ as e,c as t,a0 as i,o as s}from"./chunks/framework.D5XSuxOt.js";const p=JSON.parse('{"title":"Setting Up Your OTOS Localizer","description":"","frontmatter":{},"headers":[],"relativePath":"localization/otos.md","filePath":"localization/otos.md","lastUpdated":1737258773000}'),n={name:"localization/otos.md"};function o(r,a,l,h,u,d){return s(),t("div",null,a[0]||(a[0]=[i(`<h1 id="setting-up-your-otos-localizer" tabindex="-1">Setting Up Your OTOS Localizer <a class="header-anchor" href="#setting-up-your-otos-localizer" aria-label="Permalink to &quot;Setting Up Your OTOS Localizer&quot;">​</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Ensure the <strong>OTOS sensor</strong> is connected to an <strong>I2C port</strong> on your control hub.</li><li>Verify the protective film on the sensor is <strong>removed</strong> before use.</li></ul><h2 id="default-values" tabindex="-1">Default Values <a class="header-anchor" href="#default-values" aria-label="Permalink to &quot;Default Values&quot;">​</a></h2><p>These are the default values of the OTOSConstants. You can copy and paste this into your <code>static{}</code> block within <code>LConstants</code>:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OTOSConstants.useCorrectedOTOSClass </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OTOSConstants.hardwareMapName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sensor_otos&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OTOSConstants.linearUnit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DistanceUnit.INCH;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OTOSConstants.angleUnit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AngleUnit.RADIANS;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OTOSConstants.offset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparkFunOTOS.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Pose2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Math.PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OTOSConstants.linearScalar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OTOSConstants.angularScalar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps&quot;">​</a></h2><h3 id="_1-setup" tabindex="-1">1. Setup <a class="header-anchor" href="#_1-setup" aria-label="Permalink to &quot;1. Setup&quot;">​</a></h3><ol><li>Open the file <code>LConstants</code> and navigate to your <code>static{}</code> block.</li><li>Ensure the <strong>OTOS sensor</strong> is connected to an <strong>I2C port</strong> on your control hub (not port 0, which is reserved for the built-in imu). <ul><li>If you are using the <strong>corrected OTOS class</strong>, set <code>OTOSConstants.useCorrectedOTOSClass</code> to <code>true</code>.</li><li>If you are using the <strong>original OTOS class</strong>, set <code>OTOSConstants.useCorrectedOTOSClass</code> to <code>false</code>.</li><li>Make sure that the I2C port that you are using is the same class as the one you are using, determined by above.</li></ul></li><li>Modify or add your hardware map name for the OTOS sensor: <ul><li>Add the <strong>port name</strong> connected to your OTOS sensor by changing the value of <code>OTOSConstants.hardwareMapName</code>.</li><li>The default value is <code>&quot;sensor_otos&quot;</code>.</li></ul></li><li>Define the <strong>sensor&#39;s position</strong> relative to the <strong>center of the robot</strong>: <ul><li>Measure the X, Y coordinates (in inches) and then change the value of <code>OTOSConstants.offset</code>.</li><li><ul><li>The default value is <code>new SparkFunOTOS.Pose2D(0, 0, Math.PI / 2)</code>.</li></ul></li><li>Left/right is the y axis and forward/backward is the x axis, with left being positive y and forward being positive x.</li><li>PI/2 radians is facing forward, and clockwise rotation is negative rotation.</li></ul></li><li>If you want to change the units for your linear and angular measurements, you can do so by changing <code>OTOSConstants.linearUnit</code> and <code>OTOSConstants.angleUnit</code> in the <code>static{}</code> block of <code>LConstants</code>. <ul><li>The default linear unit is <code>DistanceUnit.INCH</code> and the default angle unit is <code>AngleUnit.RADIANS</code>.</li></ul></li></ol><h3 id="_2-localizer-tuning" tabindex="-1">2. Localizer Tuning <a class="header-anchor" href="#_2-localizer-tuning" aria-label="Permalink to &quot;2. Localizer Tuning&quot;">​</a></h3><h4 id="a-linear-scalar-forward-or-lateral-tuning" tabindex="-1">a) Linear Scalar (Forward or Lateral Tuning) <a class="header-anchor" href="#a-linear-scalar-forward-or-lateral-tuning" aria-label="Permalink to &quot;a) Linear Scalar (Forward or Lateral Tuning)&quot;">​</a></h4><p>Since OTOS has only one linear scalar, you can run <strong>either Forward or Lateral Localizer Tuner</strong>. The result should be very similar, but not the same as there will be very small, negligible differences.</p><h5 id="option-1-forward-tuning" tabindex="-1"><strong>Option 1: Forward Tuning</strong> <a class="header-anchor" href="#option-1-forward-tuning" aria-label="Permalink to &quot;**Option 1: Forward Tuning**&quot;">​</a></h5><ol><li>Align a ruler alongside your robot.</li><li>Push the robot forward by the default distance (<strong>48 inches</strong>) or a custom set value.</li><li>Observe the tuner outputs: <ul><li><strong>First number</strong>: The distance the robot estimates it has moved.</li><li><strong>Second number</strong>: The <strong>linear scalar</strong> to update.</li></ul></li></ol><h5 id="option-2-lateral-tuning" tabindex="-1"><strong>Option 2: Lateral Tuning</strong> <a class="header-anchor" href="#option-2-lateral-tuning" aria-label="Permalink to &quot;**Option 2: Lateral Tuning**&quot;">​</a></h5><ol><li><p>Align a ruler alongside your robot.</p></li><li><p>Push the robot <strong>48 inches laterally to the right</strong> (default distance) or a custom set value.</p></li><li><p>Observe the tuner outputs:</p><ul><li><strong>First number</strong>: The distance the robot estimates it has moved.</li><li><strong>Second number</strong>: The <strong>linear scalar</strong> to update.</li></ul></li><li><p>Add the linear scalar value in <code>LConstants</code> in the static block:</p><ul><li>On a new line, add (or modify if using the quickstart) <code>OTOSConstants.linearScalar = [LINEARSCALAR]</code>, where [LINEARSCALAR] is the outputted value.</li><li>By replacing in</li></ul></li><li><p>(Optional): Run multiple tests and average the scalars for better accuracy.</p></li></ol><h4 id="b-angular-scalar-turn-tuning" tabindex="-1">b) Angular Scalar (Turn Tuning) <a class="header-anchor" href="#b-angular-scalar-turn-tuning" aria-label="Permalink to &quot;b) Angular Scalar (Turn Tuning)&quot;">​</a></h4><ol><li>Place your robot, so it faces a fixed, recognizable reference point (e.g., aligning an edge with a field tile).</li><li>Run the <strong>Turn Localizer Tuner</strong>: <ul><li>By default, rotate the robot counterclockwise <strong>one full rotation</strong>.</li><li>Alternatively, you can set a <strong>custom angle</strong> in the tuner.</li></ul></li><li>After the rotation: <ul><li><strong>First number</strong>: The distance the robot estimates it as rotated.</li><li><strong>Second number</strong>: The <strong>angular scalar</strong> you need to input.</li></ul></li><li>Replace the angular scalar value in <code>OTOSLocalizer.java</code> (line <strong>78</strong>) with the new scalar: <ul><li>Ensure you <strong>replace</strong> the value, not add to or multiply the existing one.</li></ul></li><li>(Optional): Run multiple tests to average the scalars for improved accuracy.</li></ol><h2 id="testing-your-localizer" tabindex="-1">Testing Your Localizer <a class="header-anchor" href="#testing-your-localizer" aria-label="Permalink to &quot;Testing Your Localizer&quot;">​</a></h2><p>After completing the tuning steps, you can test your localizer&#39;s accuracy.</p><ol><li><p>Go to <code>Localization Test</code> and drive your robot around.</p></li><li><p>Open the FTC Dashboard at <a href="http://192.168.43.1:8080/dash" target="_blank" rel="noreferrer">http://192.168.43.1:8080/dash</a>.</p></li><li><p>Switch the view to &quot;field view&quot; from the top right corner dropdown.</p></li><li><p>The dashboard should display the robot&#39;s position on the field.</p></li><li><p>Observe the movements, moving the robot forward should make <code>x</code> increase and strafing left should make <code>y</code> increase.</p></li></ol><h2 id="congratulations" tabindex="-1">Congratulations! <a class="header-anchor" href="#congratulations" aria-label="Permalink to &quot;Congratulations!&quot;">​</a></h2><p>You have successfully tuned your OTOS Localizer. If you encounter any issues, revisit the steps above or reach out for support.</p>`,23)]))}const g=e(n,[["render",o]]);export{p as __pageData,g as default};
