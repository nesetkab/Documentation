import{_ as i,c as a,a0 as s,o as t}from"./chunks/framework.D5XSuxOt.js";const u=JSON.parse('{"title":"Setting Up Your Three Wheel Localizer","description":"","frontmatter":{},"headers":[],"relativePath":"localization/threeWheel.md","filePath":"localization/threeWheel.md","lastUpdated":1737258773000}'),l={name:"localization/threeWheel.md"};function n(r,e,o,h,d,p){return t(),a("div",null,e[0]||(e[0]=[s(`<h1 id="setting-up-your-three-wheel-localizer" tabindex="-1">Setting Up Your Three Wheel Localizer <a class="header-anchor" href="#setting-up-your-three-wheel-localizer" aria-label="Permalink to &quot;Setting Up Your Three Wheel Localizer&quot;">​</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Three odometry wheels connected to motor encoder ports on a hub.</li></ul><h2 id="default-values" tabindex="-1">Default Values <a class="header-anchor" href="#default-values" aria-label="Permalink to &quot;Default Values&quot;">​</a></h2><p>These are the default values of the ThreeWheelConstants. You can copy and paste this into your <code>static{}</code> block within <code>LConstants</code>:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.forwardTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .001989436789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.strafeTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .001989436789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.turnTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .001989436789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.leftY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.rightY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.strafeX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.leftEncoder_HardwareMapName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;leftFront&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.rightEncoder_HardwareMapName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rightRear&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.strafeEncoder_HardwareMapName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rightFront&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.leftEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.REVERSE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.rightEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.REVERSE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ThreeWheelConstants.strafeEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.FORWARD;</span></span></code></pre></div><h2 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps&quot;">​</a></h2><h3 id="_1-odometry-wheel-setup" tabindex="-1">1. Odometry Wheel Setup <a class="header-anchor" href="#_1-odometry-wheel-setup" aria-label="Permalink to &quot;1. Odometry Wheel Setup&quot;">​</a></h3><p>Open the file <code>LConstants</code> and navigate to your <code>static{}</code> block. Configure the following:</p><ol><li>Encoder Ports: <ul><li>Replace the <code>ThreeWheelConstants.leftEncoder_HardwareMapName</code>, <code>ThreeWheelConstants.rightEncoder_HardwareMapName</code>, and <code>ThreeWheelConstants.strafeEncoder_HardwareMapName</code> with the names of the ports connected to your encoders.</li><li>The names will match the hardware map names of the motor port that they are connected to.</li></ul></li><li>Odometry Measurements: <ul><li>Input the <code>ThreeWheelConstants.leftY</code>, <code>ThreeWheelConstants.rightY</code>, and <code>ThreeWheelConstants.strafeX</code> values.</li><li>These values represent the distance of the odometry wheels from the robot&#39;s center of rotation on the <a href="./setup.html#robot-coordinate-grid">robot coordinate grid</a>.</li></ul></li><li>Encoder Directions: <ul><li>The Encoder Directions can be changed by changing the <code>Encoder</code> values for <code>ThreeWheelConstants.leftEncoderDirection</code>, <code>ThreeWheelConstants.rightEncoderDirection</code>, or <code>ThreeWheelConstants.strafeEncoderDirection</code>.</li><li>Run the <code>Localization Test</code> and observe the encoder values</li><li>If the x value ticks down when the robot moves forward, reverse the direction of both of the parallel pods (left and right).</li><li>If the x value stays relatively constant when the robot drives forward, that means that one of the parallel pods (left and right) need to be reversed.</li><li>If the y value ticks down when the robot strafe left, reverse the direction of the strafe pod.</li></ul></li></ol><h3 id="_2-localizer-tuning" tabindex="-1">2. Localizer Tuning <a class="header-anchor" href="#_2-localizer-tuning" aria-label="Permalink to &quot;2. Localizer Tuning&quot;">​</a></h3><p>We need to adjust multipliers that convert encoder ticks into real-world measurements (inches or radians). This ensures your localizer&#39;s readings are accurate.</p><h4 id="a-forward-localizer-tuner" tabindex="-1">a) Forward Localizer Tuner <a class="header-anchor" href="#a-forward-localizer-tuner" aria-label="Permalink to &quot;a) Forward Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot forward by the desired distance (default is 48 inches).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has traveled.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>ThreeWheelConstants.forwardTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h4 id="b-lateral-localizer-tuner" tabindex="-1">b) Lateral Localizer Tuner <a class="header-anchor" href="#b-lateral-localizer-tuner" aria-label="Permalink to &quot;b) Lateral Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot sideways (strafing) by the desired distance (default is 48 inches).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has traveled laterally.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>ThreeWheelConstants.strafeTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h4 id="c-turn-localizer-tuner" tabindex="-1">c) Turn Localizer Tuner <a class="header-anchor" href="#c-turn-localizer-tuner" aria-label="Permalink to &quot;c) Turn Localizer Tuner&quot;">​</a></h4><ol><li><p>Position your robot facing a recognizable landmark, like a field tile edge.</p></li><li><p>Spin the robot counterclockwise for one full rotation (or your desired angle).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has spun.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>ThreeWheelConstants.turnTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h2 id="congratulations-on-successfully-tuning-your-localizer" tabindex="-1">Congratulations on successfully tuning your localizer! <a class="header-anchor" href="#congratulations-on-successfully-tuning-your-localizer" aria-label="Permalink to &quot;Congratulations on successfully tuning your localizer!&quot;">​</a></h2>`,19)]))}const k=i(l,[["render",n]]);export{u as __pageData,k as default};
