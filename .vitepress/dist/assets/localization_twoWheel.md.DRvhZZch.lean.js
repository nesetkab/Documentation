import{_ as i,c as a,a0 as t,o as s}from"./chunks/framework.D5XSuxOt.js";const u=JSON.parse('{"title":"Setting Up Your Two Wheel Localizer","description":"","frontmatter":{},"headers":[],"relativePath":"localization/twoWheel.md","filePath":"localization/twoWheel.md","lastUpdated":1737258773000}'),o={name:"localization/twoWheel.md"};function l(n,e,r,h,d,c){return s(),a("div",null,e[0]||(e[0]=[t(`<h1 id="setting-up-your-two-wheel-localizer" tabindex="-1">Setting Up Your Two Wheel Localizer <a class="header-anchor" href="#setting-up-your-two-wheel-localizer" aria-label="Permalink to &quot;Setting Up Your Two Wheel Localizer&quot;">​</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Two odometry wheels connected to motor encoder ports on a hub.</li><li>A properly configured IMU.</li></ul><h2 id="default-values" tabindex="-1">Default Values <a class="header-anchor" href="#default-values" aria-label="Permalink to &quot;Default Values&quot;">​</a></h2><p>These are the default values of the TwoWheelConstants. You can copy and paste this into your <code>static{}</code> block within <code>LConstants</code>:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.forwardTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .001989436789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.strafeTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> .001989436789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.forwardY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.strafeX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.forwardEncoder_HardwareMapName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;leftFront&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.strafeEncoder_HardwareMapName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;rightRear&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.forwardEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.REVERSE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.strafeEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.FORWARD;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.IMU_HardwareMapName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;imu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwoWheelConstants.IMU_Orientation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RevHubOrientationOnRobot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RevHubOrientationOnRobot.LogoFacingDirection.UP, RevHubOrientationOnRobot.UsbFacingDirection.LEFT);</span></span></code></pre></div><h2 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps&quot;">​</a></h2><h3 id="_1-odometry-wheel-setup" tabindex="-1">1. Odometry Wheel Setup <a class="header-anchor" href="#_1-odometry-wheel-setup" aria-label="Permalink to &quot;1. Odometry Wheel Setup&quot;">​</a></h3><p>Open the file <code>LConstants</code> and navigate to your <code>static{}</code> block. Configure the following:</p><ol><li>Encoder Ports: <ul><li>Replace the <code>TwoWheelConstants.forwardEncoder_HardwareMapName</code> and <code>TwoWheelConstants.strafeEncoder_HardwareMapName</code> with the names of the ports connected to your encoders.</li><li>The names will match the hardware map names of the motor port that they are connected to.</li></ul></li><li>Odometry Measurements: <ul><li>Input the <code>TwoWheelConstants.forwardY</code> and <code>TwoWheelConstants.strafeX</code> values.</li><li>These values represent the distance of the odometry wheels from the robot&#39;s center of rotation on the <a href="./setup.html#robot-coordinate-grid">robot coordinate grid</a>.</li></ul></li><li>Encoder Directions: <ul><li>The Encoder Directions can be changed by changing the <code>Encoder</code> values for <code>TwoWheelConstants.forwardEncoderDirection</code> or <code>TwoWheelConstants.strafeEncoderDirection</code>.</li><li>Run the <code>Localization Test</code> and observe the encoder values</li><li>If the x value ticks down when the robot moves forward, reverse the direction of the forward pod.</li><li>If the y value ticks down when the robot moves left, reverse the direction of the strafe pod.</li></ul></li><li>IMU Setup: <ul><li>Replace the <code>TwoWheelConstants.IMU_HardwareMapName</code> with the name of the configuration for your IMU.</li><li>Make sure that if you are using the built-in IMU, you have it configured to port 0 on the control hub.</li><li>Define the orientation of the IMU on the robot by changing the <code>RevHubOrientationOnRobot</code> value for <code>TwoWheelConstants.IMU_Orientation</code>.</li></ul></li></ol><h3 id="_2-localizer-tuning" tabindex="-1">2. Localizer Tuning <a class="header-anchor" href="#_2-localizer-tuning" aria-label="Permalink to &quot;2. Localizer Tuning&quot;">​</a></h3><p>We need to adjust multipliers that convert encoder ticks into real-world measurements (inches or radians). This ensures your localizer&#39;s readings are accurate.</p><h4 id="a-forward-localizer-tuner" tabindex="-1">a) Forward Localizer Tuner <a class="header-anchor" href="#a-forward-localizer-tuner" aria-label="Permalink to &quot;a) Forward Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot forward by the desired distance (default is 48 inches).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has traveled.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>TwoWheelConstants.forwardTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h4 id="b-lateral-localizer-tuner" tabindex="-1">b) Lateral Localizer Tuner <a class="header-anchor" href="#b-lateral-localizer-tuner" aria-label="Permalink to &quot;b) Lateral Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot sideways (strafing) by the desired distance (default is 48 inches).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has traveled laterally.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>TwoWheelConstants.strafeTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h2 id="testing-your-localizer" tabindex="-1">Testing Your Localizer <a class="header-anchor" href="#testing-your-localizer" aria-label="Permalink to &quot;Testing Your Localizer&quot;">​</a></h2><p>After completing the tuning steps, you can test your localizer&#39;s accuracy.</p><ol><li><p>Go to <code>Localization Test</code> and drive your robot around.</p></li><li><p>Open the FTC Dashboard at <a href="http://192.168.43.1:8080/dash" target="_blank" rel="noreferrer">http://192.168.43.1:8080/dash</a>.</p></li><li><p>Switch the view to &quot;field view&quot; from the top right corner dropdown.</p></li><li><p>The dashboard should display the robot&#39;s position on the field.</p></li><li><p>Observe the movements, moving the robot forward should make <code>x</code> increase and strafing left should make <code>y</code> increase.</p></li></ol><h2 id="congratulations-on-successfully-tuning-your-localizer" tabindex="-1">Congratulations on successfully tuning your localizer! <a class="header-anchor" href="#congratulations-on-successfully-tuning-your-localizer" aria-label="Permalink to &quot;Congratulations on successfully tuning your localizer!&quot;">​</a></h2>`,20)]))}const k=i(o,[["render",l]]);export{u as __pageData,k as default};
