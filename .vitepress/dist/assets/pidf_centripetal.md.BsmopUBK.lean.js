import{_ as t,c as o,a0 as a,o as n}from"./chunks/framework.D5XSuxOt.js";const p=JSON.parse('{"title":"Tuning Centripetal Force Correction","description":"","frontmatter":{},"headers":[],"relativePath":"pidf/centripetal.md","filePath":"pidf/centripetal.md","lastUpdated":1738215628000}'),r={name:"pidf/centripetal.md"};function i(l,e,c,s,d,u){return n(),o("div",null,e[0]||(e[0]=[a('<h1 id="tuning-centripetal-force-correction" tabindex="-1">Tuning Centripetal Force Correction <a class="header-anchor" href="#tuning-centripetal-force-correction" aria-label="Permalink to &quot;Tuning Centripetal Force Correction&quot;">​</a></h1><h2 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h2><p>The centripetal force correction corrects deviations from curved paths, ensuring the robot maintains an optimal trajectory.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h2><ol><li>Open FTC Dashboard and go to the <strong>Follower</strong> tab.</li><li>Enable all checkboxes.</li><li>Run the <code>CurvedBackAndForth</code> OpMode.</li><li>Ensure the timer for autonomous OpModes is <strong>disabled</strong>.</li></ol><h2 id="tuning-process" tabindex="-1">Tuning Process <a class="header-anchor" href="#tuning-process" aria-label="Permalink to &quot;Tuning Process&quot;">​</a></h2><ol><li><p>Observe the robot’s path:</p><ul><li>If the robot corrects towards the <strong>inside</strong> of the curve, increase <code>centripetalScaling</code>.</li><li>If the robot corrects towards the <strong>outside</strong> of the curve, decrease <code>centripetalScaling</code>.</li></ul></li><li><p>Adjust the value of <code>centripetalScaling</code> within the <code>FollowerConstants</code> section in FTC Dashboard.</p></li></ol><h2 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h2><p>Run additional tests with curved paths like <code>CurvedBackAndForth</code> or custom paths. Fine-tune the scaling value for smooth and accurate performance.</p><h2 id="input-tuned-values" tabindex="-1">Input Tuned Values <a class="header-anchor" href="#input-tuned-values" aria-label="Permalink to &quot;Input Tuned Values&quot;">​</a></h2><ol><li>Open the <code>FConstants</code> class and navigate to the <code>static{}</code> block.</li><li>Then, on a new line, add <code>FollowerConstants.centripetalScaling = [VALUE];</code>, with [VALUE] being the value you tuned for and inputted into FTC Dashboard.</li></ol><p>Note: In Step 2, you only need to make a new line if you are not using the quickstart, otherwise, you can just modify the line that already does this.<br> Note: The default value for <code>centripetalScaling</code> is <code>0.0005</code>.</p>',12)]))}const f=t(r,[["render",i]]);export{p as __pageData,f as default};
