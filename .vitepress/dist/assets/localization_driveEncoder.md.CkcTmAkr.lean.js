import{_ as i,c as a,a0 as t,o as s}from"./chunks/framework.D5XSuxOt.js";const u=JSON.parse('{"title":"Setting Up Your Drive Encoder Localizer","description":"","frontmatter":{},"headers":[],"relativePath":"localization/driveEncoder.md","filePath":"localization/driveEncoder.md","lastUpdated":1737258773000}'),n={name:"localization/driveEncoder.md"};function r(o,e,l,d,h,c){return s(),a("div",null,e[0]||(e[0]=[t(`<h1 id="setting-up-your-drive-encoder-localizer" tabindex="-1">Setting Up Your Drive Encoder Localizer <a class="header-anchor" href="#setting-up-your-drive-encoder-localizer" aria-label="Permalink to &quot;Setting Up Your Drive Encoder Localizer&quot;">​</a></h1><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Encoders attached to all drive motors.</li></ul><h2 id="default-values" tabindex="-1">Default Values <a class="header-anchor" href="#default-values" aria-label="Permalink to &quot;Default Values&quot;">​</a></h2><p>These are the default values of the DriveEncoderConstants. You can copy and paste this into your <code>static{}</code> block within <code>LConstants</code>:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.forwardTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.strafeTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.turnTicksToInches </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.robot_Width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.robot_Length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.leftFrontEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.REVERSE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.rightFrontEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.FORWARD;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.leftRearEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.REVERSE;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DriveEncoderConstants.rightRearEncoderDirection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Encoder.FORWARD;</span></span></code></pre></div><h2 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps&quot;">​</a></h2><h3 id="_1-encoder-setup" tabindex="-1">1. Encoder Setup <a class="header-anchor" href="#_1-encoder-setup" aria-label="Permalink to &quot;1. Encoder Setup&quot;">​</a></h3><p>Open the file <code>LConstants</code>. The motor names are already defined in <code>FConstants</code>, so you don&#39;t need to modify them here.</p><h3 id="_2-robot-width-and-length" tabindex="-1">2. Robot Width and Length <a class="header-anchor" href="#_2-robot-width-and-length" aria-label="Permalink to &quot;2. Robot Width and Length&quot;">​</a></h3><p>Measure your robot&#39;s wheelbase in inches, the length - the distance from the forward and back wheels - and width - the distance between the left and right wheels. Set <code>DriveEncoderConstants.robot_Width</code> and <code>DriveEncoderConstants.robot_Length</code> to the values you found above.</p><h3 id="_3-encoder-direction-calibration" tabindex="-1">3. Encoder Direction Calibration <a class="header-anchor" href="#_3-encoder-direction-calibration" aria-label="Permalink to &quot;3. Encoder Direction Calibration&quot;">​</a></h3><ol start="2"><li>Ensure all encoders tick up when the robot moves forward. Reverse the direction of any encoders that don&#39;t follow this convention.</li></ol><p>You can do this by changing the <code>Encoder.FORWARD</code> and <code>Encoder.REVERSE</code> values for each motor in the <code>LConstants</code> file.</p><h3 id="_4-localizer-tuning" tabindex="-1">4. Localizer Tuning <a class="header-anchor" href="#_4-localizer-tuning" aria-label="Permalink to &quot;4. Localizer Tuning&quot;">​</a></h3><p>We need to adjust multipliers that convert encoder ticks into real-world measurements (inches or radians). This ensures your localizer&#39;s readings are accurate.</p><h4 id="a-forward-localizer-tuner" tabindex="-1">a) Forward Localizer Tuner <a class="header-anchor" href="#a-forward-localizer-tuner" aria-label="Permalink to &quot;a) Forward Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot forward by the desired distance (default is 48 inches).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has traveled.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>DriveEncoderConstants.forwardTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h4 id="b-lateral-localizer-tuner" tabindex="-1">b) Lateral Localizer Tuner <a class="header-anchor" href="#b-lateral-localizer-tuner" aria-label="Permalink to &quot;b) Lateral Localizer Tuner&quot;">​</a></h4><ol><li><p>Position a ruler alongside your robot.</p></li><li><p>Push the robot sideways (strafing) by the desired distance (default is 48 inches).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has traveled laterally.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>DriveEncoderConstants.strafeTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h4 id="c-turn-localizer-tuner" tabindex="-1">c) Turn Localizer Tuner <a class="header-anchor" href="#c-turn-localizer-tuner" aria-label="Permalink to &quot;c) Turn Localizer Tuner&quot;">​</a></h4><ol><li><p>Position your robot facing a recognizable landmark, like a field tile edge.</p></li><li><p>Spin the robot counterclockwise for one full rotation (or your desired angle).</p></li><li><p>The tuner will display two numbers:</p><ul><li><p>First number: Distance the robot thinks it has spun.</p></li><li><p>Second number (multiplier)</p></li></ul></li><li><p>(Optional) Run multiple tests and average the multipliers for better accuracy.</p></li><li><p>Input this value in <code>LConstants</code> as <code>DriveEncoderConstants.turnTicksToInches = [multiplier]</code>, where <code>[multiplier]</code> is the value you obtained from the tuner.</p></li></ol><h2 id="testing-your-localizer" tabindex="-1">Testing Your Localizer <a class="header-anchor" href="#testing-your-localizer" aria-label="Permalink to &quot;Testing Your Localizer&quot;">​</a></h2><p>After completing the tuning steps, you can test your localizer&#39;s accuracy.</p><ol><li><p>Go to <code>Localization Test</code> and drive your robot around.</p></li><li><p>Open the FTC Dashboard at <a href="http://192.168.43.1:8080/dash" target="_blank" rel="noreferrer">http://192.168.43.1:8080/dash</a>.</p></li><li><p>Switch the view to &quot;field view&quot; from the top right corner dropdown.</p></li><li><p>The dashboard should display the robot&#39;s position on the field.</p></li><li><p>Observe the movements, moving the robot forward should make <code>x</code> increase and strafing left should make <code>y</code> increase.</p></li></ol><h2 id="congratulations-on-successfully-tuning-your-localizer" tabindex="-1">Congratulations on successfully tuning your localizer! <a class="header-anchor" href="#congratulations-on-successfully-tuning-your-localizer" aria-label="Permalink to &quot;Congratulations on successfully tuning your localizer!&quot;">​</a></h2>`,26)]))}const k=i(n,[["render",r]]);export{u as __pageData,k as default};
