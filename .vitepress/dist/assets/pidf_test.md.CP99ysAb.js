import{_ as t,c as o,a0 as a,o as n}from"./chunks/framework.D5XSuxOt.js";const p=JSON.parse('{"title":"Testing Your Tuned PID Controllers","description":"","frontmatter":{},"headers":[],"relativePath":"pidf/test.md","filePath":"pidf/test.md","lastUpdated":1738215628000}'),r={name:"pidf/test.md"};function i(s,e,l,u,h,d){return n(),o("div",null,e[0]||(e[0]=[a('<h1 id="testing-your-tuned-pid-controllers" tabindex="-1">Testing Your Tuned PID Controllers <a class="header-anchor" href="#testing-your-tuned-pid-controllers" aria-label="Permalink to &quot;Testing Your Tuned PID Controllers&quot;">​</a></h1><h2 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h2><p>After completing the tuning of all PIDFs and tuning centripetal scaling, it’s important to validate the overall performance of your robot under real-world conditions. This step ensures that your robot follows paths accurately and smoothly.</p><h2 id="recommended-tests" tabindex="-1">Recommended Tests <a class="header-anchor" href="#recommended-tests" aria-label="Permalink to &quot;Recommended Tests&quot;">​</a></h2><h3 id="_1-circle" tabindex="-1">1. Circle <a class="header-anchor" href="#_1-circle" aria-label="Permalink to &quot;1. Circle&quot;">​</a></h3><ul><li>The <strong>Circle</strong> test is primarily for fun but can also be used to observe the robot’s handling of continuous curves.</li><li>Look for: <ul><li>Smooth and consistent movement along the circular trajectory.</li></ul></li></ul><h3 id="_2-triangle" tabindex="-1">2. Triangle <a class="header-anchor" href="#_2-triangle" aria-label="Permalink to &quot;2. Triangle&quot;">​</a></h3><ul><li>The <strong>Triangle</strong> test evaluates the robot’s ability to navigate sharp turns and straight segments.</li><li>It will drive in a triangular path, starting at the bottom-middle vertex.</li></ul><h3 id="_3-custom-paths" tabindex="-1">3. Custom Paths <a class="header-anchor" href="#_3-custom-paths" aria-label="Permalink to &quot;3. Custom Paths&quot;">​</a></h3><ul><li>Create custom paths to test the robot’s performance in scenarios closer to match conditions.</li><li>Look for: <ul><li>Consistency across different types of paths.</li><li>Smooth transitions between path segments.</li></ul></li></ul><h2 id="fine-tuning-tips" tabindex="-1">Fine-Tuning Tips <a class="header-anchor" href="#fine-tuning-tips" aria-label="Permalink to &quot;Fine-Tuning Tips&quot;">​</a></h2><ol><li>Observe the robot’s performance during each test.</li><li>If you notice any issues (e.g., overshooting, slow corrections, oscillations), revisit the corresponding PID and make small adjustments.</li><li>Alternate between different tests to ensure the robot performs well in diverse scenarios.</li></ol><h2 id="autonomous-building" tabindex="-1">Autonomous Building <a class="header-anchor" href="#autonomous-building" aria-label="Permalink to &quot;Autonomous Building&quot;">​</a></h2><p>If you are confused and lost on how to make a Pedro autonomous, check out <a href="./../examples/buildauto.html">the Autonomous Building</a> for a step-by-step guide on how to build an autonomous using Pedro.</p><h2 id="documentation-and-support" tabindex="-1">Documentation and Support <a class="header-anchor" href="#documentation-and-support" aria-label="Permalink to &quot;Documentation and Support&quot;">​</a></h2><p>If further improvements are needed or you encounter issues, please join the <a href="https://discord.gg/2GfC4qBP5s" target="_blank" rel="noreferrer">Pedro Pathing Discord Server</a> to ask questions! Feel free to make an issue on this repo by clicking the edit button at the top right of the page.</p><h2 id="final-thoughts" tabindex="-1">Final Thoughts <a class="header-anchor" href="#final-thoughts" aria-label="Permalink to &quot;Final Thoughts&quot;">​</a></h2><p>Congratulations on completing your PIDF tuning and testing! Best of luck to your team this season!</p>',18)]))}const m=t(r,[["render",i]]);export{p as __pageData,m as default};
